{
  "nav": {
    "about": "À propos",
    "skills": "Compétences",
    "projects": "Projets",
    "contact": "Contact"
  },
  "profile": {
    "greeting": "Bonjour, je suis",
    "title": "Étudiant en Informatique",
    "subtitle": "Spécialisé en IA & Science des Données",
    "contact": "Me Contacter",
    "resume": "Voir Mon CV"
  },
  "about": {
    "explore": "À PROPOS DE MOI",
    "title": "À PROPOS DE MOI",
    "bio": "Je suis étudiant en 3ème année d'informatique, passionné par la manipulation des données et particulièrement par les avancées en intelligence artificielle. Je suis constamment à la recherche de nouvelles opportunités pour développer mes compétences en analyse et traitement des données. Je suis prêt à relever de nouveaux défis et à contribuer au succès des projets.",
    "objectives": {
      "title": "Mes Objectifs",
      "shortTerm": {
        "title": "Objectif à Court Terme",
        "description": "Intégrer une école pour approfondir mes connaissances en développement et optimisation d'IA."
      },
      "longTerm": {
        "title": "Objectif à Long Terme",
        "description": "Travailler dans la recherche ou le développement en IA."
      }
    },
    "journey": {
      "discover": "DÉCOUVRIR",
      "title": "Mon Parcours",
      "experience": {
        "title": "Expérience",
        "duration": "9 semaines",
        "databaseAnalysis": "Analyse de Base de Données",
        "location": "Tours Métropole",
        "techTags": {
          "sql": "SQL",
          "postgresql": "PostgreSQL",
          "dbDesign": "Conception BDD",
          "performance": "Performance"
        }
      },
      "education": {
        "title": "Formation",
        "duration": "2022-2025",
        "bachelor": "BUT Informatique",
        "location": "Université de Dijon",
        "viewProgram": "Voir le Programme"
      },
      "futureInternship": {
        "title": "Stage à Venir",
        "duration": "16 semaines",
        "neuralNetworkEvaluation": "Évaluation de Réseaux Neuronaux",
        "location": "Laboratoire CIAD, Dijon",
        "techTags": {
          "python": "Python",
          "snn": "SNN",
          "neuralNetworks": "Réseaux Neuraux",
          "evolutionary": "Évolutionnaire"
        }
      }
    }
  },
  "skills": {
    "explore": "DÉCOUVRIR",
    "title": "Mes Compétences",
    "title2": "Mes Compétences Générales",
    "categories": {
      "database": {
        "title": "Base de données",
        "skills": {
          "sql": "SQL",
          "excel": "Excel",
          "neo4j": "Neo4j",
          "powerBi": "Power BI"
        }
      },
      "development": {
        "title": "Développement",
        "skills": {
          "python": "Python",
          "cSharp": "C#",
          "htmlCss": "HTML/CSS",
          "php": "PHP",
          "cPlusPlus": "C++"
        }
      },
      "tools": {
        "title": "Outils & Autres",
        "skills": {
          "git": "Git",
          "projectManagement": "Gestion de Projet",
          "promptEngineering": "Ingénierie de Prompts",
          "english": "Anglais",
          "multispectralImage": "Image Multispectrale",
          "imageProcessing": "Traitement d'Image",
          "guiDevelopment": "Développement d'Interface",
          "research": "Recherche",
          "responsiveDesign": "Design Responsif"
        }
      }
    },
    "levels": {
      "advanced": {
        "label": "Avancé",
        "description": "Maîtrise approfondie et expérience significative"
      },
      "intermediate": {
        "label": "Intermédiaire",
        "description": "Bonne compréhension et pratique régulière"
      },
      "basic": {
        "label": "Débutant",
        "description": "Connaissances fondamentales et pratique de base"
      }
    },
    "skillLevels": {
      "b2": "Niveau B2"
    },
    "generalSkills": {
      "title": "Mes Compétences Générales",
      "skills": {
        "communication": "Communication",
        "autonomy": "Autonomie",
        "adaptability": "Adaptabilité",
        "collaboration": "Collaboration",
        "learning": "Apprentissage Continu"
      }
    }
  },
  "general": {
    "title": "Mes Compétences Générales",
    "communication": "Communication",
    "autonomy": "Autonomie",
    "adaptability": "Adaptabilité",
    "collaboration": "Collaboration",
    "learning": "Apprentissage Continu"
  },
  "projects": {
    "types": {
      "academic": "Projet Académique",
      "personal": "Projet Personnel"
    },
    "discover": "DÉCOUVRIR",
    "title": "Mes Projets",
    "viewDetails": "Voir les Détails",
    "viewGithub": "Voir sur GitHub",
    "brainTumor": {
      "brand": "BrainScan AI",
      "title": "IA de Détection de Tumeurs Cérébrales",
      "subtitle": "Un projet personnel d'apprentissage profond pour explorer les capacités de TensorFlow et Keras en analyse d'images médicales",
      "overview": {
        "title": "Vue d'ensemble",
        "description": "BrainScan AI est un projet personnel visant à apprendre et maîtriser TensorFlow et Keras par la pratique. Le projet se concentre sur le développement d'un Réseau de Neurones Convolutifs (CNN) pour la classification automatisée des tumeurs cérébrales à partir d'IRM. Cette expérience d'apprentissage autodidacte m'a permis d'acquérir une expérience pratique des frameworks d'apprentissage profond tout en relevant un défi significatif en imagerie médicale."
      },
      "goals": {
        "title": "Objectifs d'Apprentissage",
        "tensorflow": "Maîtriser le framework TensorFlow et l'API Keras",
        "cnn": "Comprendre la conception et l'optimisation d'architecture CNN",
        "medical": "Appliquer l'apprentissage profond à l'analyse d'images médicales",
        "evaluation": "Apprendre l'évaluation de modèles et les métriques de performance"
      },
      "challenge": {
        "title": "Défi",
        "description": "Le principal défi était de créer un système de classification fiable capable de distinguer avec précision les différents types de tumeurs cérébrales tout en maintenant une haute précision pour toutes les catégories. Cela a nécessité une conception minutieuse de l'architecture du modèle et une optimisation approfondie des données d'entraînement."
      },
      "technical": {
        "title": "Détails Techniques",
        "keyFeatures": "Caractéristiques Principales",
        "features": {
          "accuracy": "94% de précision globale",
          "classification": "Classification multi-classes des tumeurs",
          "architecture": "Architecture CNN personnalisée",
          "optimization": "Optimisé pour les IRM 256x256"
        }
      },
      "performance": {
        "title": "Performance du Modèle",
        "matrix": "Matrice de Confusion",
        "matrixDesc": "Résultats détaillés de classification par type de tumeur",
        "accuracyByType": "Précision par Type",
        "types": {
          "glioma": "Gliome : 93.6% de précision",
          "meningioma": "Méningiome : 87.7% de précision",
          "noTumor": "Pas de Tumeur : 98.0% de précision",
          "pituitary": "Pituitaire : 96.7% de précision"
        }
      },
      "notebook": {
        "title": "Détails Complets de l'Implémentation",
        "description": "Voici l'implémentation complète du modèle de détection de tumeurs cérébrales, y compris le traitement des données, l'architecture du modèle, l'entraînement et l'évaluation.",
        "openNotebook": "Voir le Notebook Complet"
      }
    },
    "multispectral": {
      "brand": "SimulFCImage",
      "back": "Retour aux Projets",
      "title": "Visionneur d'Images Multispectrales",
      "indexTitle": "Visionneur d'Images Multispectrales",
      "indexDescription": "Direction du développement d'un outil logiciel professionnel pour le Laboratoire ImViA, permettant la visualisation et l'analyse d'images multispectrales à travers diverses méthodes de simulation.",
      "subtitle": "Un projet professionnel développé pour le Laboratoire ImViA à Dijon pendant ma dernière année de BUT Informatique",
      "overview": {
        "title": "Vue d'ensemble",
        "description": "SimulFCImage est un outil conçu pour manipuler des images multispectrales, permettant aux utilisateurs de les visualiser dans différentes représentations colorées. L'application propose plusieurs méthodes de simulation, de la génération de couleurs réelles aux visualisations spécialisées comme la simulation de la vision des abeilles."
      },
      "features": {
        "title": "Fonctionnalités Clés",
        "list": {
          "trueColor": "Génération de Couleurs Réelles",
          "falseColor": "Sélection de Bandes RGB Personnalisée",
          "beeVision": "Simulation de Vision des Abeilles",
          "colorBlind": "Simulation de Daltonisme",
          "interface": "Interface Utilisateur Intuitive"
        }
      },
      "technical": {
        "title": "Détails Techniques",
        "tags": {
          "python": "Python",
          "multispectralImage": "Image Multispectrale",
          "imageProcessing": "Traitement d'Image",
          "guiDevelopment": "Développement d'Interface",
          "searching": "Recherche"
        }
      },
      "concept": {
        "title": "Comprendre les Images Multispectrales",
        "whatIs": {
          "title": "Qu'est-ce qu'une Image Multispectrale ?",
          "description": "Une image multispectrale est composée de plusieurs bandes, chacune capturant la lumière à différentes longueurs d'onde. Contrairement aux images RGB classiques qui ne capturent que la lumière visible, les images multispectrales peuvent capturer des informations au-delà de la vision humaine, incluant l'infrarouge et l'ultraviolet."
        },
        "understandingBands": {
          "title": "Comprendre les Bandes",
          "description": "Chaque bande dans une image multispectrale représente l'intensité de la lumière à une longueur d'onde spécifique. Par exemple, une bande unique peut montrer l'intensité de réflexion de la lumière à 550nm (lumière verte). Ces bandes peuvent être combinées de différentes manières pour révéler divers aspects de la scène capturée."
        },
        "bandExample": "Exemple d'une bande spectrale unique (représentation en niveaux de gris)"
      },
      "interface": {
        "title": "Aperçu de l'Interface",
        "design": {
          "title": "Design User-Friendly",
          "description": "L'application propose une interface intuitive permettant aux utilisateurs de :",
          "features": {
            "import": "Importer facilement des images multispectrales",
            "navigate": "Naviguer entre les différentes bandes",
            "select": "Sélectionner les méthodes de simulation",
            "visualize": "Visualiser et sauvegarder les résultats"
          }
        },
        "preview": {
          "caption": "Interface principale de SimulFCImage avec navigation entre les bandes et options de simulation"
        }
      },
      "methods": {
        "title": "Méthodes de Simulation",
        "trueColor": {
          "title": "Génération de Couleurs Réelles",
          "inputBands": "Bandes d'Entrée",
          "inputBandsCaption": "203 Bandes d'Entrée",
          "generatedResult": "Résultat Généré",
          "originalRGB": "RGB Original",
          "generatedResultCaption": "Notre Méthode",
          "originalRGBCaption": "Image de Référence"
        },
        "falseColor": {
          "title": "Génération de Fausses Couleurs",
          "description": "Sélection personnalisée des bandes RGB pour une visualisation spécialisée où l'utilisateur peut choisir les bandes à afficher, dans ce cas, le rouge est assigné à la 167ème bande, le vert à la 32ème bande et le bleu à la 86ème bande"
        },
        "beeVision": {
          "title": "Simulation de Vision des Abeilles",
          "description": "Simule la façon dont les abeilles perçoivent les images multispectrales"
        }
      },
      "architecture": {
        "title": "Architecture Technique",
        "description": "L'application suit une architecture moderne en 6 couches conçue pour la maintenabilité et l'évolutivité :",
        "layers": {
          "hmi": "IHM (Interface Homme Machine) : Gère l'interface visuelle et les interactions utilisateur",
          "builder": "Builder : Gère la création des widgets selon le pattern Builder",
          "logic": "LogicLayer : Contient la logique métier pour le traitement d'images multispectrales",
          "factory": "Factory : Implémente le pattern Factory pour les méthodes de simulation",
          "managers": "Managers : Gère les opérations fichiers et les ressources",
          "exceptions": "Exceptions : Gestion personnalisée des erreurs spécifiques à l'application"
        }
      },
      "simulation": {
        "trueColor": {
          "description": "Génère une représentation en couleurs naturelles telle que vue par l'œil humain"
        }
      },
      "role": {
        "title": "Rôle",
        "description": "Chef de Projet, Responsable Communication & Développeur"
      },
      "context": {
        "title": "Contexte",
        "description": "Projet Professionnel, 3ème année BUT Informatique"
      },
      "client": {
        "title": "Client",
        "description": "Laboratoire ImViA, Dijon"
      },
      "goals": {
        "title": "Détails du Projet",
        "role": "Chef de Projet, Responsable Communication & Développeur",
        "context": "Projet Professionnel, 3ème année BUT Informatique",
        "client": "Laboratoire ImViA, Dijon"
      }
    },
    "portfolio": {
      "brand": "Portfolio",
      "title": "Site Portfolio",
      "description": "Un site portfolio moderne et responsive construit from scratch avec HTML5, CSS3 et JavaScript, mettant l'accent sur un design épuré et l'accessibilité.",
      "tags": {
        "html5": "HTML5",
        "css3": "CSS3",
        "javascript": "JavaScript",
        "responsiveDesign": "Design Adaptatif"
      }
    },
    "neurodraw": {
      "brand": "NeuroDraw",
      "title": "Visualisation de Réseau Neuronal",
      "indexTitle": "Visualisation de Réseau Neuronal",
      "indexDescription": "Une implémentation éducative d'un réseau de neurones créée from scratch pour la reconnaissance de chiffres, conçue pour comprendre les fondamentaux sans bibliothèques complexes.",
      "subtitle": "Un projet éducatif pratique pour comprendre les réseaux de neurones en en implémentant un from scratch",
      "overview": {
        "title": "Vue d'ensemble",
        "description": "NeuroDraw est une application Python créée à des fins éducatives pour démontrer le fonctionnement des réseaux de neurones à leur niveau le plus basique. Au lieu d'utiliser des bibliothèques sophistiquées comme TensorFlow ou PyTorch, ce projet implémente un réseau de neurones simple from scratch, facilitant la compréhension des concepts fondamentaux."
      },
      "goals": {
        "title": "Objectifs d'Apprentissage",
        "implementation": "Implémenter un réseau de neurones sans bibliothèques complexes",
        "visualization": "Créer une visualisation interactive des décisions du réseau",
        "understanding": "Comprendre les concepts fondamentaux des réseaux de neurones",
        "documentation": "Créer une documentation détaillée à des fins éducatives"
      },
      "features": {
        "title": "Fonctionnalités Clés",
        "list": {
          "network": "Réseau de neurones simple implémenté from scratch",
          "canvas": "Zone de dessin interactive pour les tests",
          "visualization": "Visualisation en temps réel des décisions du réseau",
          "documentation": "Documentation détaillée de l'implémentation"
        }
      },
      "technical": {
        "title": "Détails Techniques",
        "architecture": "Architecture du Réseau",
        "implementation": "Détails d'Implémentation",
        "features": {
          "python": "Python",
          "numpy": "NumPy",
          "pyqt": "PyQt5",
          "neuralNetworks": "Réseaux de Neurones"
        }
      },
      "architecture": {
        "title": "Architecture du Réseau",
        "description": "Le réseau neuronal est composé de trois couches :",
        "layers": {
          "input": "Couche d'entrée : 784 neurones (images 28x28 pixels)",
          "hidden": "Couche cachée : 28 neurones avec activation ReLU",
          "output": "Couche de sortie : 10 neurones (chiffres 0-9) avec activation Softmax"
        },
        "diagram": "Représentation visuelle de l'architecture du réseau"
      },
      "demo": {
        "title": "Démonstration en Direct",
        "description": "Observez le réseau reconnaître les chiffres dessinés en temps réel :",
        "videos": {
          "simple": "Prédiction en temps réel d'un chiffre \"3\" dessiné",
          "evolution": "Évolution des prédictions : le dessin commence comme un \"3\", devient un \"2\", et se termine en \"8\""
        }
      }
    }
  },
  "contact": {
    "getInTouch": "RENCONTRER",
    "title": "Contactez-moi",
    "email": "Email",
    "linkedin": "LinkedIn"
  },
  "footer": {
    "copyright": "Copyright © 2024 Camille Maslin",
    "rights": "Tous droits réservés",
    "madeWith": "Réalisé avec",
    "viewSource": "Voir le code source"
  }
}