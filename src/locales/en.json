{
  "nav": {
    "about": "About",
    "skills": "Skills",
    "projects": "Projects",
    "contact": "Contact"
  },
  "profile": {
    "greeting": "Hello, I'm",
    "title": "Computer Science Student",
    "subtitle": "Specializing in AI & Data Science",
    "contact": "Contact Me",
    "resume": "View My CV"
  },
  "about": {
    "explore": "ABOUT ME",
    "title": "ABOUT ME",
    "bio": "I am a 3rd-year Computer Science student, passionate about data manipulation and particularly advancements in artificial intelligence. I am constantly seeking new opportunities to develop my skills in data analysis and processing. I am ready to take on new challenges and contribute to the success of projects.",
    "objectives": {
      "title": "My Objectives",
      "shortTerm": {
        "title": "Short Term Goal",
        "description": "Join a school to enhance my knowledge in AI development and optimization."
      },
      "longTerm": {
        "title": "Long Term Goal",
        "description": "Work in AI research or development."
      }
    },
    "journey": {
      "discover": "DISCOVER",
      "title": "My Journey",
      "experience": {
        "title": "Experience",
        "duration": "9 weeks",
        "databaseAnalysis": "Database Analysis",
        "location": "Tours MÃ©tropole",
        "techTags": {
          "sql": "SQL",
          "postgresql": "PostgreSQL",
          "dbDesign": "Database Design",
          "performance": "Performance"
        }
      },
      "education": {
        "title": "Education",
        "duration": "2022-2025",
        "bachelor": "Bachelor in Computer Science",
        "location": "Dijon University",
        "viewProgram": "View Program"
      },
      "futureInternship": {
        "title": "Future Internship",
        "duration": "16 weeks",
        "neuralNetworkEvaluation": "Neural Network Evaluation",
        "location": "CIAD Laboratory, Dijon",
        "techTags": {
          "python": "Python",
          "snn": "SNN",
          "neuralNetworks": "Neural Networks",
          "evolutionary": "Evolutionary"
        }
      }
    }
  },
  "skills": {
    "explore": "EXPLORE",
    "title": "My Skills",
    "title2": "My General Skills",
    "categories": {
      "database": {
        "title": "Database",
        "skills": {
          "sql": "SQL",
          "excel": "Excel",
          "neo4j": "Neo4j",
          "powerBi": "Power BI"
        }
      },
      "development": {
        "title": "Development",
        "skills": {
          "python": "Python",
          "cSharp": "C#",
          "htmlCss": "HTML/CSS",
          "php": "PHP",
          "cPlusPlus": "C++"
        }
      },
      "tools": {
        "title": "Tools & Others",
        "skills": {
          "git": "Git",
          "projectManagement": "Project Management",
          "promptEngineering": "Prompt Engineering",
          "english": "English",
          "multispectralImage": "Multispectral Image",
          "imageProcessing": "Image Processing",
          "guiDevelopment": "GUI Development",
          "research": "Research",
          "responsiveDesign": "Responsive Design"
        }
      }
    },
    "levels": {
      "advanced": {
        "label": "Advanced",
        "description": "Deep mastery and significant experience"
      },
      "intermediate": {
        "label": "Intermediate",
        "description": "Good understanding and regular practice"
      },
      "basic": {
        "label": "Basic",
        "description": "Fundamental knowledge and basic practice"
      }
    },
    "skillLevels": {
      "b2": "B2 Level"
    },
    "generalSkills": {
      "title": "My General Skills",
      "skills": {
        "communication": "Communication",
        "autonomy": "Autonomy",
        "adaptability": "Adaptability",
        "collaboration": "Collaboration",
        "learning": "Continuous Learning"
      }
    }
  },
  "general": {
    "title": "My General Skills",
    "communication": "Communication",
    "autonomy": "Autonomy",
    "adaptability": "Adaptability",
    "collaboration": "Collaboration",
    "learning": "Continuous Learning"
  },
  "projects": {
    "types": {
      "academic": "Academic Project",
      "personal": "Personal Project"
    },
    "discover": "DISCOVER",
    "title": "My Projects",
    "viewDetails": "View Details",
    "viewGithub": "View on GitHub",
    "brainTumor": {
      "brand": "BrainScan AI",
      "title": "Brain Tumor Detection AI",
      "subtitle": "A personal deep learning project to explore TensorFlow and Keras capabilities in medical image analysis",
      "overview": {
        "title": "Project Overview",
        "description": "BrainScan AI is a personal project aimed at learning and mastering TensorFlow and Keras through practical application. The project focuses on developing a Convolutional Neural Network (CNN) for automated brain tumor classification from MRI scans. This self-directed learning experience helped me gain hands-on experience with deep learning frameworks while tackling a meaningful medical imaging challenge."
      },
      "goals": {
        "title": "Learning Objectives",
        "tensorflow": "Master TensorFlow framework and Keras API",
        "cnn": "Understand CNN architecture design and optimization",
        "medical": "Apply deep learning to medical image analysis",
        "evaluation": "Learn model evaluation and performance metrics"
      },
      "challenge": {
        "title": "Challenge",
        "description": "The main challenge was to create a reliable classification system that could accurately distinguish between different types of brain tumors while maintaining high precision across all categories. This required careful model architecture design and extensive training data optimization."
      },
      "technical": {
        "title": "Technical Details",
        "keyFeatures": "Key Features",
        "features": {
          "accuracy": "94% overall classification accuracy",
          "classification": "Multi-class tumor classification",
          "architecture": "Custom CNN architecture",
          "optimization": "Optimized for 256x256 MRI scans"
        }
      },
      "performance": {
        "title": "Model Performance",
        "matrix": "Confusion Matrix",
        "matrixDesc": "Detailed classification results across tumor types",
        "accuracyByType": "Classification Accuracy by Type",
        "types": {
          "glioma": "Glioma: 93.6% accuracy",
          "meningioma": "Meningioma: 87.7% accuracy",
          "noTumor": "No Tumor: 98.0% accuracy",
          "pituitary": "Pituitary: 96.7% accuracy"
        }
      },
      "notebook": {
        "title": "Complete Implementation Details",
        "description": "Below is the complete implementation of the brain tumor detection model, including data processing, model architecture, training, and evaluation.",
        "openNotebook": "View the Notebook"
      }
    },
    "multispectral": {
      "back": "Back to Projects",
      "brand": "SimulFCImage",
      "title": "Multispectral Image Viewer",
      "indexTitle": "Multispectral Image Viewer",
      "indexDescription": "Led the development of a professional software tool for the ImViA Laboratory, enabling visualization and analysis of multispectral images through various simulation methods.",
      "subtitle": "A professional project developed for ImViA Laboratory (Dijon) during my final year of Bachelor's degree in Computer Science",
      "overview": {
        "title": "Project Overview",
        "description": "SimulFCImage is a tool designed for manipulating multispectral images, enabling users to visualize them in various color representations. The application provides multiple simulation methods, from true color generation to specialized visualizations like bee vision simulation."
      },
      "features": {
        "title": "Key Features",
        "list": {
          "trueColor": "True Color Generation",
          "falseColor": "False Color RGB Band Selection",
          "beeVision": "Bee Vision Simulation",
          "colorBlind": "Color Blindness Simulation",
          "interface": "Intuitive User Interface"
        }
      },
      "technical": {
        "title": "Technical Details",
        "tags": {
          "python": "Python",
          "multispectralImage": "Multispectral Image",
          "imageProcessing": "Image Processing",
          "guiDevelopment": "GUI Development",
          "searching": "Searching"
        }
      },
      "concept": {
        "title": "Understanding Multispectral Images",
        "whatIs": {
          "title": "What is a Multispectral Image?",
          "description": "A multispectral image consists of several bands, each capturing light at different wavelengths. Unlike regular RGB images that only capture visible light, multispectral images can capture information beyond human vision, including infrared and ultraviolet wavelengths."
        },
        "understandingBands": {
          "title": "Understanding Bands",
          "description": "Each band in a multispectral image represents the intensity of light at a specific wavelength. For example, a single band might show how strongly a scene reflects light at 550nm (green light). These bands can be combined in various ways to reveal different aspects of the captured scene."
        },
        "bandExample": "Example of a single spectral band (grayscale representation)"
      },
      "interface": {
        "title": "Interface Overview",
        "design": {
          "title": "User-Friendly Design",
          "description": "The application features an intuitive interface that allows users to:",
          "features": {
            "import": "Import multispectral images easily",
            "navigate": "Navigate through different bands",
            "select": "Select simulation methods",
            "visualize": "Visualize and save results"
          }
        },
        "preview": {
          "caption": "SimulFCImage main interface with band navigation and simulation options"
        }
      },
      "methods": {
        "title": "Simulation Methods",
        "trueColor": {
          "title": "True Color Generation",
          "inputBands": "Input Bands",
          "inputBandsCaption": "203 Input Bands",
          "generatedResult": "Generated Result",
          "originalRGB": "Original RGB",
          "generatedResultCaption": "Our Method",
          "originalRGBCaption": "Reference Image"
        },
        "falseColor": {
          "title": "False Color Generation",
          "description": "Custom RGB band selection for specialized visualization where the user can choose the bands to be displayed, in this case, the red is assigned to the 167th band, the green to the 32th band and the blue to the 86th band"
        },
        "beeVision": {
          "title": "Bee Vision Simulation",
          "description": "Simulates how bees perceive multispectral images"
        }
      },
      "architecture": {
        "title": "Technical Architecture",
        "description": "The application follows a modern 6-layer architecture designed for maintainability and scalability:",
        "layers": {
          "hmi": "HMI (Human Machine Interface): Handles the visual interface and user interactions",
          "builder": "Builder: Manages widget creation using the Builder pattern",
          "logic": "LogicLayer: Contains core logic for multispectral image processing",
          "factory": "Factory: Implements abstract factory pattern for simulation methods",
          "managers": "Managers: Handles file operations and resource management",
          "exceptions": "Exceptions: Custom exception handling for application-specific errors"
        }
      },
      "simulation": {
        "trueColor": {
          "description": "Generates natural color representation as seen by human eyes"
        }
      },
      "role": {
        "title": "Role",
        "description": "Project Leader, Communication Manager & Developer"
      },
      "context": {
        "title": "Context",
        "description": "Professional Project, 3rd Year BUT Informatique"
      },
      "client": {
        "title": "Client",
        "description": "ImViA Laboratory, Dijon"
      },
      "goals": {
        "title": "Project Details",
        "role": "Project Leader, Communication Manager & Developer",
        "context": "Professional Project, 3rd Year BUT Informatique",
        "client": "ImViA Laboratory, Dijon"
      }
    },
    "portfolio": {
      "brand": "Portfolio",
      "title": "Portfolio Website",
      "description": "A modern, responsive portfolio website built from scratch using HTML5, CSS3, and JavaScript, focusing on clean design and accessibility.",
      "tags": {
        "html5": "HTML5",
        "css3": "CSS3",
        "javascript": "JavaScript",
        "responsiveDesign": "Responsive Design"
      }
    },
    "neurodraw": {
      "brand": "NeuroDraw",
      "title": "Neural Network Visualization",
      "indexTitle": "Neural Network Visualization",
      "indexDescription": "An educational neural network implementation from scratch for digit recognition, designed to understand the fundamentals without complex libraries.",
      "subtitle": "A hands-on educational project to understand neural networks by implementing one from scratch",
      "overview": {
        "title": "Project Overview",
        "description": "NeuroDraw is a Python application created for educational purposes to demonstrate how neural networks work at their most basic level. Instead of using sophisticated libraries like TensorFlow or PyTorch, this project implements a simple neural network from scratch, making it easier to understand the core concepts of neural networks."
      },
      "architecture": {
        "title": "Network Architecture",
        "description": "The neural network consists of three layers:",
        "layers": {
          "input": "Input Layer: 784 neurons (28x28 pixel images)",
          "hidden": "Hidden Layer: 28 neurons with ReLU activation",
          "output": "Output Layer: 10 neurons (digits 0-9) with Softmax activation"
        },
        "diagram": "Visual representation of the network architecture"
      },
      "demo": {
        "title": "Live Demo",
        "description": "Watch the network recognize hand-drawn digits in real-time:",
        "videos": {
          "simple": "Real-time prediction of a drawn digit \"3\"",
          "evolution": "Evolution of predictions: drawing starts as \"3\", transitions to \"2\", and ends as \"8\""
        }
      },
      "goals": {
        "title": "Learning Objectives",
        "implementation": "Implement a neural network without complex libraries",
        "visualization": "Create an interactive visualization of network decisions",
        "understanding": "Understand core neural network concepts",
        "documentation": "Create detailed documentation for educational purposes"
      },
      "features": {
        "title": "Key Features",
        "list": {
          "network": "Simple neural network implemented from scratch",
          "canvas": "Interactive drawing canvas for testing",
          "visualization": "Real-time visualization of network decisions",
          "documentation": "Detailed implementation documentation"
        }
      },
      "technical": {
        "title": "Technical Details",
        "architecture": "Network Architecture",
        "implementation": "Implementation Details",
        "features": {
          "python": "Python",
          "numpy": "NumPy",
          "pyqt": "PyQt5",
          "neuralNetworks": "Neural Networks"
        }
      }
    }
  },
  "contact": {
    "getInTouch": "GET IN TOUCH",
    "title": "Contact Me",
    "email": "Email",
    "linkedin": "LinkedIn"
  },
  "footer": {
    "copyright": "Copyright Â© 2024 Camille Maslin",
    "rights": "All rights reserved",
    "madeWith": "Made with",
    "viewSource": "View source code"
  }
}
